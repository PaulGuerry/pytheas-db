{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4493880c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Todo List\", -1));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button\"\n}, \"Add Todo\", -1));\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addTodo && $options.addTodo(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo = $event)\n  }, null, 512), [[_vModelText, $data.newTodo]]), _hoisted_2], 32), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todoL, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.done = $event\n    }, null, 8, _hoisted_3), [[_vModelCheckbox, todo.done]]), _createTextVNode(\" \" + _toDisplayString(todo.text) + \" \", 1), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeTodo(todo),\n      class: \"letter_button\"\n    }, \"X\", 8, _hoisted_4)]);\n  }), 128))]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $data.hideCompleted = !$data.hideCompleted)\n  }, _toDisplayString($data.hideCompleted ? 'Show all' : 'Hide completed'), 1)], 64);\n}","map":{"version":3,"mappings":";;gEAkCIA,oBAAkB,YAAd,WAAS;gEAGbA,oBAAwC;EAAhCC,KAAK,EAAC;AAAQ,GAAC,UAAQ;;;;6DAH/BC,UAAkB,EACpBF,oBAGO;IAHAG,QAAM,wDAAUC,6CAAO;sBAC5BJ,oBAA0B;+DAAVK,aAAO;gCAAPA,aAAO,KACvBC,UAAwC,QAE1CN,oBAMK,gCALHO,oBAIKC,6BAJcH,WAAK,EAAbI,IAAI;yBAAfF,oBAIK;MAJsBG,GAAG,EAAED,IAAI,CAACE;wBACnCX,oBAA2C;MAApCY,IAAI,EAAC,UAAU;uCAAUH,IAAI,CAACI,IAAI;gDAATJ,IAAI,CAACI,IAAI,sBAAE,GAC1C,oBAAGJ,IAAI,CAACK,IAAI,IAAG,GAChB,0BAAkE;MAAzDC,OAAK,YAAEX,mBAAU,CAACK,IAAI;MAAGR,KAAK,EAAC;OAAgB,GAAC;eAG7DD,oBAES;IAFAe,OAAK,sCAAEV,mBAAa,IAAIA,mBAAa;sBACzCA,mBAAa","names":["_createElementVNode","class","_hoisted_1","onSubmit","$options","$data","_hoisted_2","_createElementBlock","_Fragment","todo","key","id","type","done","text","onClick"],"sourceRoot":"","sources":["/home/pguerry/GITHUB/13_vue_computed-property/src/components/Form.vue"],"sourcesContent":["<script>\nlet id = 0\n\nexport default {\n  name: 'TodoForm',\n  data() {\n    return {\n      newTodo: '',\n      hideCompleted: false,\n      todoL: [\n        { id: id++, text: 'Learn HTML' , done: true},\n        { id: id++, text: 'Learn JavaScript', done: false },\n        { id: id++, text: 'Learn Vue', done: true }\n      ]\n    }\n  },\n  methods: {\n    addTodo() {\n      this.todoL.push({id: id++, text: this.newTodo}),\n      this.newTodo = ''\n    },\n    removeTodo(todo) {\n      this.todoL = this.todoL.filter((t) => t != todo)\n    }\n  },\n  computed: { \n    hideList () {\n      return (this.hideCompleted ? this.todos.filter((t) => !t.done) : this.todos)\n    }\n  } \n}\n</script>\n\n<template>\n    <h3>Todo List</h3>\n  <form @submit.prevent=\"addTodo\">\n    <input v-model=\"newTodo\" >\n    <button class=\"button\">Add Todo</button>    \n  </form>\n  <ul>\n    <li v-for=\"todo in todoL\" :key=\"todo.id\">\n      <input type=\"checkbox\" v-model=\"todo.done\">\n       {{ todo.text }}\n      <button @click=\"removeTodo(todo)\" class=\"letter_button\">X</button>\n    </li>\n  </ul>\n  <button @click=\"hideCompleted = !hideCompleted\">\n    {{ hideCompleted ? 'Show all' : 'Hide completed' }}\n  </button>\n</template>\n\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ninput {\n  width: 25%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 2px solid #42b893;\n  font-size: 12px;\n  border-radius: 4px;\n}\n.button {\n  background-color: none;\n  border: 2x #42b893;\n  color: black;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 12 px;\n  margin: 4px 2px;\n  cursor: pointer;\n}\n.letter_button {\n  background-color: none;\n  border: 2px #42b893;\n  color: black;\n  padding: 2px 4px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 10 px;\n  margin: 4px 2px;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}